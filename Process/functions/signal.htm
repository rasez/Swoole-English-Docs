<html>
<head>
<title>swoole_process::signal</title>
<meta http-equiv=Content-Type content="text/html; charset=gbk">
<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css"/>
<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
<script type="text/javascript">
    SyntaxHighlighter.defaults['gutter'] = false;
    SyntaxHighlighter.defaults['toolbar'] = false;
    SyntaxHighlighter.all();
</script>
</head>
<body>
    <div class="wiki_content">
        <article>
            <h1>swoole_process::signal</h1>
            
            <p>设置异步信号监听。</p>
            <pre class="brush: php;">bool swoole_process::signal(int $signo, mixed $callback);
</pre>
            <ul>
                <li>此方法基于signalfd和eventloop是异步IO，不能用于同步程序中</li>
                <li>同步阻塞的程序可以使用pcntl扩展提供的pcntl_signal</li>
                <li>$callback如果为null，表示移除信号监听</li>
            </ul>
            <p>使用举例：</p>
            <pre class="brush: php;">swoole_process::signal(SIGTERM, function($signo) {
     echo "shutdown.";
});
</pre>
            <blockquote>
                <ul>
                    <li>swoole_server中不能设置SIGTERM和SIGALAM信号</li>
                    <li>swoole_process::signal在swoole-1.7.9以上版本可用</li>
                    <li>信号移除特性仅在1.7.21或更高版本可用</li>
                </ul>
            </blockquote>
        </article>
        
    </div>
</body>
</html>
