<html>
<head>
<title>swoole_client::sleep</title>
<meta http-equiv=Content-Type content="text/html; charset=gbk">
<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css" />
<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
<script type="text/javascript">
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
</head>
<body>
    <div class="wiki_content">
        <article>
            <h1>swoole_client->sleep</h1>
            
            <p>调用此方法会从事件循环中移除当前socket的可读监听，停止接收数据。</p>
            <pre class="brush: php;">function swoole_client-&gt;sleep()
            </pre>
            <ul>
                <li>此方法仅停止从socket中接收数据，但不会移除可写事件，所以不会影响发送队列</li>
                <li>sleep操作与wakeup作用相反，使用wakeup方法可以重新监听可读事件</li>
            </ul>
            <blockquote>
                <p>sleep方法在swoole-1.7.21或更高版本可用</p>
            </blockquote>
            <h2>使用示例</h2>
            <pre class="brush: php;">$client-&gt;on("receive", function(swoole_client $cli, $data){
    //睡眠模式，不再接收新的数据
    $cli-&gt;sleep();
    swoole_timer_after(5000, function() use ($cli) {
    //唤醒，重新接收数据
    $cli-&gt;wakeup();
    });
});
            </pre>
        </article>
        
    </div>
</body>
</html>
