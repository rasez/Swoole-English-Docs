<html>
	<head>
		<title>入门指引</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<link rel="stylesheet" href="../public/css/Word2Chm.css" type="text/css"/>
		<link rel="stylesheet" href="../public/css/default.css" type="text/css"/>
		<link rel="stylesheet" href="../public/css/noframe.css" type="text/css"/>
		<link rel="stylesheet" href="../public/css/bootstrap.css" type="text/css"/>
		<link rel="stylesheet" href="../public/styles/shThemeDefault.css" type="text/css"/>
		<script type="text/javascript" src="../public/scripts/shCore.js"></script>
		<script type="text/javascript" src="../public/scripts/shBrushPhp.js"></script>
		<script type="text/javascript">
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		</script>
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>入门指引</h1>
				<p>
					Swoole虽然是标准的PHP扩展，实际上与普通的扩展不同。普通的扩展只是提供一个库函数。而swoole扩展在运行后会接管PHP的控制权，进入事件循环。当IO事件发生后，swoole会自动回调指定的PHP函数。
				</p>
				<ul>
					<li> 新手入门教程： <a
						href="https://github.com/LinkedDestiny/swoole-doc"
						target="_blank"
						>https://github.com/LinkedDestiny/swoole-doc</a></li>
				</ul>
				<h2>swoole_server</h2>
				<p>
					强大的TCP/UDP
					Server框架，EventLoop，事件驱动，异步，Worker进程组，Task异步任务，毫秒定时器，SSL/TLS隧道加密。
				</p>
				<ul>
					<li> swoole_http_server是swoole_server的子类，内置了Http的支持 </li>
					<li> swoole_websocket_server是swoole_http_server的子类，内置了WebSocket的支持 </li>
				</ul>
				<h2>swoole_client</h2>
				<p>
					TCP/UDP客户端，支持同步并发调用，也支持异步事件驱动。
				</p>
				<h2>swoole_event</h2>
				<p>
					EventLoop
					API，让用户可以直接操作底层的事件循环，将socket，stream，管道等Linux文件加入到事件循环中。
				</p>
				<blockquote>
					<p>
						eventloop接口仅可用于socket类型的文件描述符，不能用于磁盘文件读写
					</p>
				</blockquote>
				<h2>swoole_async</h2>
				<p>
					异步IO接口，提供了 异步文件系统IO，异步DNS查询，异步MySQL等API。包括2个重要的子模块：
				</p>
				<ul>
					<li> swoole_timer，异步毫秒定时器，可以实现间隔时间或一次性的定时任务 </li>
					<li> file，文件系统操作的异步接口 </li>
				</ul>
				<h2>swoole_process</h2>
				<p>
					进程管理模块，可以方便的创建子进程，进程间通信，进程管理。
				</p>
				<h2>swoole_buffer</h2>
				<p>
					强大的内存区管理工具，像C一样进行指针计算，又无需关心内存的申请和释放，而且不用担心内存越界，底层全部做好了。
				</p>
				<h2>swoole_table</h2>
				<p>
					基于共享内存和自旋锁实现的超高性能内存表。彻底解决线程，进程间数据共享，加锁同步等问题。
				</p>
				<blockquote>
					<p>
						swoole_table的性能可以达到单线程每秒读写50W次
					</p>
				</blockquote>
			</article>
		</div>
	</body>
</html>
