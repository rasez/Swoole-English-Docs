<html>
	<head>
		<title>while循环的影响</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css" />
		<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
		<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
		<script type="text/javascript">
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		</script>
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>while循环的影响</h1>
				<p>
					异步程序如果遇到死循环，事件将无法触发。异步IO程序使用<code>Reactor模型</code>，运行过程中必须在<code>reactor-&gt;wait</code>处轮询。如果遇到死循环，那么程序的控制权就在while中了，<code>reactor</code>无法得到控制权，无法检测事件，所以IO事件回调函数也将无法触发。
				</p>

				<blockquote>
					<p>
						密集运算的代码不是阻塞
					</p>
				</blockquote>

				<h2>实例程序</h2>
				<pre class="brush:php;">$serv = new swoole_server("127.0.0.1", 9501);
$serv-&gt;on('receive', function ($serv, $fd, $from_id, $data) {
    while(1)
    {
        $i ++;
    }
    $serv-&gt;send($fd, 'Swoole: '.$data);
});
$serv-&gt;start();
</pre>
				<p>
					onReceive事件中执行了死循环，server在无法再收到任何客户端请求，必须等待循环结束才能继续处理新的事件。
				</p>
			</article>
		</div>
	</body>
</html>
