<html>
	<head>
		<title>创建TCP服务器</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<meta name="GENERATOR" content="Macrobject Word-2-CHM">
		<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css" />
		<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
		<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
		<script type="text/javascript">
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		</script>
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>创建TCP服务器</h1>
				<h2>程序代码</h2>
				<p>
					server.php
				</p>
				<pre class="brush: php;">
//创建Server对象，监听 127.0.0.1:9501端口
$serv = new swoole_server("127.0.0.1", 9501); 

//监听连接进入事件
$serv-&gt;on('connect', function ($serv, $fd) {  
    echo "Client: Connect.\n";
});

//监听数据发送事件
$serv-&gt;on('receive', function ($serv, $fd, $from_id, $data) {
    $serv-&gt;send($fd, "Server: ".$data);
});

//监听连接关闭事件
$serv-&gt;on('close', function ($serv, $fd) {
    echo "Client: Close.\n";
});

//启动服务器
$serv-&gt;start(); 
            </pre>
				<p>
					这里就创建了一个TCP服务器，监听本机9501端口。它的逻辑很简单，当客户端Socket通过网络发送一个
					<code>
						hello</code>
					字符串时，服务器会回复一个
					<code>
						Server: hello</code>
					字符串。
				</p>
				<p>
					swoole_server是异步服务器，所以是通过监听事件的方式来编写程序的。当对应的事件发生时底层会主动回调指定的PHP函数。如当有新的TCP连接进入时会执行onConnect事件回调，当某个连接向服务器发送数据时会回调onReceive函数。
				</p>
				<ul>
					<li>服务器可以同时被成千上万个客户端连接，$fd就是客户端连接的唯一标识符</li>
					<li>调用 <code>
							$server-&gt;send()</code> 方法向客户端连接发送数据，参数就是$fd客户端标识符 </li>
					<li>调用 <code>
							$server-&gt;close()</code> 方法可以强制关闭某个客户端连接 </li>
					<li>客户端可能会主动断开连接，此时会触发onClose事件回调</li>
				</ul>
				<h2>执行程序</h2>
				<pre class="brush: php;">php server.php
            </pre>
				<p>
					在命令行下运行server.php程序，启动成功后可以使用
					<code>
						netstat</code>
					工具看到，已经在监听9501端口。这时就可以使用telnet/netcat工具连接服务器。
				</p>
				<pre class="brush: php;">telnet 127.0.0.1 9501
hello
Server: hello
            </pre>
			</article>
		</div>
	</body>
</html>
