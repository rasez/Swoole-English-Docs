<html class="translated-ltr"><head>
    <title>Reactor, Worker, Task relationship</title>
    <meta http-equiv="Content-Type" content="text/html; charset=gbk">
    <link rel="stylesheet" href="../public/css/Word2Chm.css" type="text/css">
    <link rel="stylesheet" href="../public/css/default.css" type="text/css">
    <link rel="stylesheet" href="../public/css/noframe.css" type="text/css">
    <link rel="stylesheet" href="../public/css/bootstrap.css" type="text/css">
    <link type="text/css" rel="stylesheet" charset="UTF-8" href="https://translate.googleapis.com/translate_static/css/translateelement.css"></head>
    <body>
        <div class="wiki_content">
            <article>
                <h1><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Reactor, Worker, Task relationship</font></font></h1>
                
                <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">The responsibilities of the three roles are:</font></font></p>
                <h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Reactor thread</font></font></h2>
                <ul>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Responsible for maintaining the TCP connection of the client machine, processing network IO, sending and receiving data</font></font></li>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Completely asynchronous non-blocking mode</font></font></li>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">All for C code, no PHP code except for the Start/Shudown event callback</font></font></li>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Buffer, splicing, and splitting the data sent by the TCP client into a complete request packet</font></font></li>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Reactor runs in a multi-threaded manner</font></font></li>
                </ul>
                <h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Worker process</font></font></h2>
                <ul>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Accept the request packet delivered by the Reactor thread and execute the PHP callback function to process the data</font></font></li>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Generate response data and send it to the Reactor thread, which is sent by the Reactor thread to the TCP client.</font></font></li>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Can be asynchronous non-blocking mode or synchronous blocking mode</font></font></li>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Workers run in multiple processes</font></font></li>
                </ul>
                <h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Task process</font></font></h2>
                <ul>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Accept tasks submitted by the Worker process via the swoole_server-&gt;task/taskwait method</font></font></li>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Process the task and return the result data to the Worker process</font></font></li>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Fully synchronous blocking mode</font></font></li>
                    <li><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Task runs as a multi-process</font></font></li>
                </ul>
                <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">It can be understood that reactor is nginx and worker is php-fpm. </font><font style="vertical-align: inherit;">The reactor thread processes the network request asynchronously in parallel and then forwards it to the worker process for processing. </font><font style="vertical-align: inherit;">The reactor and the worker communicate by IPC.</font></font></p>
                <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">The swoole's reactor, worker, and task_worker can be closely combined to provide a more advanced and practical way.</font></font></p>
                <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">A more popular analogy, assuming that Server is a factory, the reactor is the sales, to help you pick up the project order. </font><font style="vertical-align: inherit;">The worker is the worker. When the sales receives the order, the worker goes to work to produce what the customer wants. </font><font style="vertical-align: inherit;">The task_worker can be understood as an administrative staff, which can help the worker do some chores and let the workers concentrate on their work.</font></font></p>
                <blockquote>
                    <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
                        The underlying layer will assign a unique ID to the Worker process and the Task process. </font></font><br><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">
                        Different task/worker processes can communicate with each other via the sendMessage interface.
                    </font></font></p>
                </blockquote>
            </article>
            
        </div><div id="goog-gt-tt" class="skiptranslate" dir="ltr"><div style="padding: 8px;"><div><div class="logo"><img src="https://www.gstatic.com/images/branding/product/1x/translate_24dp.png" width="20" height="20" alt="Google Translate"></div></div></div><div class="top" style="padding: 8px; float: left; width: 100%;"><h1 class="title gray">Original text</h1></div><div class="middle" style="padding: 8px;"><div class="original-text"></div></div><div class="bottom" style="padding: 8px;"><div class="activity-links"><span class="activity-link">Contribute a better translation</span><span class="activity-link"></span></div><div class="started-activity-container"><hr style="color: #CCC; background-color: #CCC; height: 1px; border: none;"><div class="activity-root"></div></div></div><div class="status-message" style="display: none;"></div></div>
    
    
    <div class="goog-te-spinner-pos"><div class="goog-te-spinner-animation"><svg xmlns="http://www.w3.org/2000/svg" class="goog-te-spinner" width="96px" height="96px" viewBox="0 0 66 66"><circle class="goog-te-spinner-path" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"></circle></svg></div></div></body></html>