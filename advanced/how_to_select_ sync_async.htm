<html class="translated-ltr"><head>
    <title>Swoole asynchronous and synchronous selection</title>
    <meta http-equiv="Content-Type" content="text/html; charset=gbk">
    <link rel="stylesheet" href="../public/css/Word2Chm.css" type="text/css">
    <link rel="stylesheet" href="../public/css/default.css" type="text/css">
    <link rel="stylesheet" href="../public/css/noframe.css" type="text/css">
    <link rel="stylesheet" href="../public/css/bootstrap.css" type="text/css">
    <link type="text/css" rel="stylesheet" charset="UTF-8" href="https://translate.googleapis.com/translate_static/css/translateelement.css"></head>
    <body>
        <div class="wiki_content">
            <article>
                <h1><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Swoole asynchronous and synchronous selection</font></font></h1>
                
                <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Swoole not only supports asynchronous but also supports synchronization. </font><font style="vertical-align: inherit;">When to use synchronization and when to use asynchronous. </font><font style="vertical-align: inherit;">Explain here.</font></font></p>
                <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">We do not support the use of asynchronous callbacks for functional development. The traditional PHP synchronization method to achieve functions and logic is the simplest and best solution. </font><font style="vertical-align: inherit;">Callbacks like node.js are just sacrificing maintainability and development efficiency.</font></font></p>
                <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">But sometimes it is suitable to use asynchronous, such as FTP, chat server, smtp, proxy server, etc., such as communication and read and write disks, functions and business logic followed by server programs.</font></font></p>
                <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">"PHP's extension function APIs are all synchronous." This statement is not correct. In fact, the main place for synchronous blocking is network calls and file reading and writing. </font><font style="vertical-align: inherit;">For example, mysql_query needs to communicate with the mysql database server, curl needs to call the network, file_get_contents needs to read and write files, and other fopen/fwrite/fread/fgets/fputs are blocked APIs. </font><font style="vertical-align: inherit;">In addition to this, PHP's array/string/mbstring functions are non-blocking.</font></font></p>
                <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Swoole provides an asynchronous socket client, asynchronous mysql, and 1.6.12 also provides asynchronous file read and write and asynchronous DNS query. </font><font style="vertical-align: inherit;">In addition, the task/finish API is provided to solve the blocking IO problem.</font></font></p>
            </article>
            
        </div><div id="goog-gt-tt" class="skiptranslate" dir="ltr"><div style="padding: 8px;"><div><div class="logo"><img src="https://www.gstatic.com/images/branding/product/1x/translate_24dp.png" width="20" height="20" alt="Google Translate"></div></div></div><div class="top" style="padding: 8px; float: left; width: 100%;"><h1 class="title gray">Original text</h1></div><div class="middle" style="padding: 8px;"><div class="original-text"></div></div><div class="bottom" style="padding: 8px;"><div class="activity-links"><span class="activity-link">Contribute a better translation</span><span class="activity-link"></span></div><div class="started-activity-container"><hr style="color: #CCC; background-color: #CCC; height: 1px; border: none;"><div class="activity-root"></div></div></div><div class="status-message" style="display: none;"></div></div>
    
    
    <div class="goog-te-spinner-pos"><div class="goog-te-spinner-animation"><svg xmlns="http://www.w3.org/2000/svg" class="goog-te-spinner" width="96px" height="96px" viewBox="0 0 66 66"><circle class="goog-te-spinner-path" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"></circle></svg></div></div></body></html>