<html class="translated-ltr"><head>
    <title>Queue</title>
    <meta http-equiv="Content-Type" content="text/html; charset=gbk">
    <link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css">
    <link rel="stylesheet" href="../../public/css/default.css" type="text/css">
    <link rel="stylesheet" href="../../public/css/noframe.css" type="text/css">
    <link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css">
    <link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css">
    <script type="text/javascript" src="../../public/scripts/shCore.js"></script>
    <script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
    <script type="text/javascript">
        SyntaxHighlighter.defaults['gutter'] = false;
        SyntaxHighlighter.defaults['toolbar'] = false;
        SyntaxHighlighter.all();
    </script>
    <link type="text/css" rel="stylesheet" charset="UTF-8" href="https://translate.googleapis.com/translate_static/css/translateelement.css"></head>
    <body>
        <div class="wiki_content">
            <article>
                <h1><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Queue</font></font></h1>
                
                <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Asynchronous concurrent servers often use queues to implement the producer consumer model to solve concurrent queuing problems. </font><font style="vertical-align: inherit;">The </font></font><code>SplQueue</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">built-in queue data structure </font><font style="vertical-align: inherit;">is provided in PHP's SPL standard library </font><font style="vertical-align: inherit;">. </font><font style="vertical-align: inherit;">Also PHP's arrays are also available </font></font><code>array_pop</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">and </font></font><code>array_shift</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">can be used to simulate queued data structures using arrays.</font></font></p>
    
    <h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">SplQueue</font></font></h2>
    
    <div><div id="highlighter_496226" class="syntaxhighlighter nogutter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php variable">$queue</code> <code class="php plain">= </code><code class="php keyword">new</code> <code class="php plain">SplQueue;</code></div><div class="line number2 index1 alt1"><code class="php comments">//入队</code></div><div class="line number3 index2 alt2"><code class="php variable">$queue</code><code class="php plain">-&gt;push(</code><code class="php variable">$data</code><code class="php plain">);</code></div><div class="line number4 index3 alt1"><code class="php comments">//出队</code></div><div class="line number5 index4 alt2"><code class="php variable">$data</code> <code class="php plain">= </code><code class="php variable">$queue</code><code class="php plain">-&gt;shift();</code></div><div class="line number6 index5 alt1"><code class="php comments">//Query the number of queues in the queue</code></div><div class="line number7 index6 alt2"><code class="php variable">$n</code> <code class="php plain">= </code><code class="php functions">count</code><code class="php plain">(</code><code class="php variable">$queue</code><code class="php plain">);</code></div></div></td></tr></tbody></table></div></div>
    
    <h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Array simulation queue</font></font></h2>
    
    <div><div id="highlighter_519632" class="syntaxhighlighter nogutter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php variable">$queue</code> <code class="php plain">= </code><code class="php keyword">array</code><code class="php plain">();</code></div><div class="line number2 index1 alt1"><code class="php comments">//入队</code></div><div class="line number3 index2 alt2"><code class="php variable">$queue</code><code class="php plain">[] = </code><code class="php variable">$data</code><code class="php plain">;</code></div><div class="line number4 index3 alt1"><code class="php comments">//出队</code></div><div class="line number5 index4 alt2"><code class="php variable">$data</code> <code class="php plain">= </code><code class="php functions">array_shift</code><code class="php plain">(</code><code class="php variable">$queue</code><code class="php plain">);</code></div><div class="line number6 index5 alt1"><code class="php comments">//Query the number of queues in the queue</code></div><div class="line number7 index6 alt2"><code class="php variable">$n</code> <code class="php plain">= </code><code class="php functions">count</code><code class="php plain">(</code><code class="php variable">$queue</code><code class="php plain">);</code></div></div></td></tr></tbody></table></div></div>
    
    <h2><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Performance comparison</font></font></h2>
    
    <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Although Array can be used to implement queues, performance will actually be very poor. </font><font style="vertical-align: inherit;">On a large concurrent server program, it is recommended to use it </font></font><code>SplQueue</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">as a queue data structure.</font></font></p>
    
    <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">1 million pieces of data are randomly enqueued and dequeued </font><font style="vertical-align: inherit;">, and can be completed </font><font style="vertical-align: inherit;">using </font></font><code>SplQueue</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">only the </font></font><code>2312.345ms</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">use of the program. The program using the Array-simulated queue cannot complete the test at all. The CPU continues to be 100%, and after it is reduced to 10,000, it needs </font></font><code>260ms</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">to be tested. .</font></font></p>
    
    <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">SplQueue</font></font></p>
    
    <div><div id="highlighter_989250" class="syntaxhighlighter nogutter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php variable">$splq</code> <code class="php plain">= </code><code class="php keyword">new</code> <code class="php plain">SplQueue;</code></div><div class="line number2 index1 alt1"><code class="php keyword">for</code><code class="php plain">(</code><code class="php variable">$i</code> <code class="php plain">= 0; </code><code class="php variable">$i</code> <code class="php plain">&lt; 1000000; </code><code class="php variable">$i</code><code class="php plain">++)</code></div><div class="line number3 index2 alt2"><code class="php plain">{</code></div><div class="line number4 index3 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$data</code> <code class="php plain">= </code><code class="php string">"hello $i\n"</code><code class="php plain">;</code></div><div class="line number5 index4 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$splq</code><code class="php plain">-&gt;push(</code><code class="php variable">$data</code><code class="php plain">);</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">if</code> <code class="php plain">(</code><code class="php variable">$i</code> <code class="php plain">% 100 == 99 </code><code class="php keyword">and</code> <code class="php functions">count</code><code class="php plain">(</code><code class="php variable">$splq</code><code class="php plain">) &gt; 100)</code></div><div class="line number8 index7 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">{</code></div><div class="line number9 index8 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$popN</code> <code class="php plain">= rand(10, 99);</code></div><div class="line number10 index9 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">for</code> <code class="php plain">(</code><code class="php variable">$j</code> <code class="php plain">= 0; </code><code class="php variable">$j</code> <code class="php plain">&lt; </code><code class="php variable">$popN</code><code class="php plain">; </code><code class="php variable">$j</code><code class="php plain">++)</code></div><div class="line number11 index10 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">{</code></div><div class="line number12 index11 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$splq</code><code class="php plain">-&gt;shift();</code></div><div class="line number13 index12 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number14 index13 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number15 index14 alt2"><code class="php plain">}</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="php variable">$popN</code> <code class="php plain">= </code><code class="php functions">count</code><code class="php plain">(</code><code class="php variable">$splq</code><code class="php plain">);</code></div><div class="line number18 index17 alt1"><code class="php keyword">for</code> <code class="php plain">(</code><code class="php variable">$j</code> <code class="php plain">= 0; </code><code class="php variable">$j</code> <code class="php plain">&lt; </code><code class="php variable">$popN</code><code class="php plain">; </code><code class="php variable">$j</code><code class="php plain">++)</code></div><div class="line number19 index18 alt2"><code class="php plain">{</code></div><div class="line number20 index19 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$splq</code><code class="php plain">-&gt;pop();</code></div><div class="line number21 index20 alt2"><code class="php plain">}</code></div></div></td></tr></tbody></table></div></div>
    
    <p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Array queue</font></font></p>
    
    <div><div id="highlighter_626115" class="syntaxhighlighter nogutter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php variable">$arrq</code> <code class="php plain">= </code><code class="php keyword">array</code><code class="php plain">();</code></div><div class="line number2 index1 alt1"><code class="php keyword">for</code><code class="php plain">(</code><code class="php variable">$i</code> <code class="php plain">= 0; </code><code class="php variable">$i</code> <code class="php plain">&lt;1000000; </code><code class="php variable">$i</code><code class="php plain">++)</code></div><div class="line number3 index2 alt2"><code class="php plain">{</code></div><div class="line number4 index3 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$data</code> <code class="php plain">= </code><code class="php string">"hello $i\n"</code><code class="php plain">;</code></div><div class="line number5 index4 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$arrq</code><code class="php plain">[] = </code><code class="php variable">$data</code><code class="php plain">;</code></div><div class="line number6 index5 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">if</code> <code class="php plain">(</code><code class="php variable">$i</code> <code class="php plain">% 100 == 99 </code><code class="php keyword">and</code> <code class="php functions">count</code><code class="php plain">(</code><code class="php variable">$arrq</code><code class="php plain">) &gt; 100)</code></div><div class="line number7 index6 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">{</code></div><div class="line number8 index7 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$popN</code> <code class="php plain">= rand(10, 99);</code></div><div class="line number9 index8 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">for</code> <code class="php plain">(</code><code class="php variable">$j</code> <code class="php plain">= 0; </code><code class="php variable">$j</code> <code class="php plain">&lt; </code><code class="php variable">$popN</code><code class="php plain">; </code><code class="php variable">$j</code><code class="php plain">++)</code></div><div class="line number10 index9 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">{</code></div><div class="line number11 index10 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php functions">array_shift</code><code class="php plain">(</code><code class="php variable">$arrq</code><code class="php plain">);</code></div><div class="line number12 index11 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number13 index12 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number14 index13 alt1"><code class="php plain">}</code></div><div class="line number15 index14 alt2"><code class="php variable">$popN</code> <code class="php plain">= </code><code class="php functions">count</code><code class="php plain">(</code><code class="php variable">$arrq</code><code class="php plain">);</code></div><div class="line number16 index15 alt1"><code class="php keyword">for</code> <code class="php plain">(</code><code class="php variable">$j</code> <code class="php plain">= 0; </code><code class="php variable">$j</code> <code class="php plain">&lt; </code><code class="php variable">$popN</code><code class="php plain">; </code><code class="php variable">$j</code><code class="php plain">++)</code></div><div class="line number17 index16 alt2"><code class="php plain">{</code></div><div class="line number18 index17 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php functions">array_shift</code><code class="php plain">(</code><code class="php variable">$arrq</code><code class="php plain">);</code></div><div class="line number19 index18 alt2"><code class="php plain">}</code></div></div></td></tr></tbody></table></div></div>
    
            </article>
            
        </div><div id="goog-gt-tt" class="skiptranslate" dir="ltr"><div style="padding: 8px;"><div><div class="logo"><img src="https://www.gstatic.com/images/branding/product/1x/translate_24dp.png" width="20" height="20" alt="Google Translate"></div></div></div><div class="top" style="padding: 8px; float: left; width: 100%;"><h1 class="title gray">Original text</h1></div><div class="middle" style="padding: 8px;"><div class="original-text"></div></div><div class="bottom" style="padding: 8px;"><div class="activity-links"><span class="activity-link">Contribute a better translation</span><span class="activity-link"></span></div><div class="started-activity-container"><hr style="color: #CCC; background-color: #CCC; height: 1px; border: none;"><div class="activity-root"></div></div></div><div class="status-message" style="display: none;"></div></div>
    
    
    <div class="goog-te-spinner-pos"><div class="goog-te-spinner-animation"><svg xmlns="http://www.w3.org/2000/svg" class="goog-te-spinner" width="96px" height="96px" viewBox="0 0 66 66"><circle class="goog-te-spinner-path" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"></circle></svg></div></div></body></html>