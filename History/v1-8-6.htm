<html>
	<head>
		<title>v1.8.6</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<link rel="stylesheet" href="../public/css/Word2Chm.css" type="text/css">
		<link rel="stylesheet" href="../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../public/css/bootstrap.css" type="text/css" />
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>1.8.6</h1>
				<p>
					1.8.6版本是一个重要的BUG修复版本，主要修复了PHP7环境下HttpServer、TCPClient、HttpClient、Redis等客户端存在的内存泄漏、崩溃问题。另外1.8.6版本对MySQL进行了彻底重构，提供了全新的面向对象风格API，彻底移除了对PHP的mysqli和mysqlnd的依赖。
				</p>

				<p>
					<strong>建议所有swoole开发者升级至此版本。</strong>
				</p>

				<h2>主要更新内容</h2>

				<ul>
					<li>修复<code>Swoole\Server->set</code>方法在关联索引数组的Value为NULL时错误地更改了zval类型</li>
					<li>更新<code>Swoole\Server->task</code>方法第三个参数可以直接传入回调函数</li>
					<li>修复<code>Swoole\WebSocket\Server</code>收到恶意请求时崩溃的问题，提升稳定性</li>
					<li>重构<code>Swoole\MySQL</code>客户端，移除对<code>mysqli</code>和<code>mysqlnd</code>的依赖，提供了面向对象风格的API</li>
					<li>调整<code>Swoole\Http\Client</code>为内置，不需要额外的编译参数开启</li>
					<li>调整<code>Swoole\Client</code>和<code>Swoole\Http\Client</code>内存回收的时机，在连接发送关闭时回收内存资源</li>
					<li>增加<code>swoole_async_dns_lookup</code>查询结果缓存</li>
					<li>优化<code>Swoole\WebSocket\Server</code>性能，减少两次内存复制</li>
					<li>移除<code>Swoole\Http\Server->setGlobal</code>方法</li>
					<li>修复在Task进程中执行close时onClose回调函数未在Worker进程中执行的问题</li>
					<li>修复<code>Swoole\Table</code>删除KEY后未清空数据的问题</li>
					<li>增加SSL、TLS证书链的支持</li>
					<li>移除<code>gcc aio</code></li>
					<li>修复异步文件读写函数的相关问题</li>
				</ul>

				<h2>新版异步MySQL客户端</h2>
				<pre class="brush:php;">$db = new swoole_mysql;
$server = array(
    'host' => '192.168.56.102',
    'user' => 'test',
    'password' => 'test',
    'database' => 'test',
);

$db->connect($server, function ($db, $r) {
    if ($r === false) {
        var_dump($db->connect_errno, $db->connect_error);
        die;
    }
    $sql = 'show tables';
    $db->query($sql, function(swoole_mysql $db, $r) {
        global $s;
        if ($r === false)
        {
            var_dump($db->error, $db->errno);
        }
        elseif ($r === true )
        {
            var_dump($db->affected_rows, $db->insert_id);
        }
        var_dump($r);
        $db->close();
    });
});

</pre>

			</article>

		</div>
	</body>
</html>
