<html>
	<head>
		<title>Channel</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css"/>
		<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
		<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
		<script type="text/javascript">
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		</script>
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>Channel</h1>
				<p>
					swoole-1.9.0新增了一个新的内存数据结构<code>Channel</code>，类似于Go的chan，底层基于共享内存+Mutex互斥锁实现，可实现用户态的高性能内存队列。
				</p>

				<ul>
					<li>Channel可用于多进程环境下，底层在读取写入时会自动加锁，应用层不需要担心数据同步问题</li>
					<li>必须在父进程内创建才可以在子进程内使用</li>
				</ul>

				<h2>使用示例：</h2>
				<pre class="brush:php;">$chan = new Swoole\Channel(1024 * 256);
$n = 100000;
$bytes = 0;
if (pcntl_fork() > 0)
{
    echo "Father\n";
    for ($i = 0; $i &lt; $n; $i++)
    {
        $data = str_repeat('A', rand(100, 200));
        if ($chan->push($data) === false)
        {
            echo "channel full\n";
            usleep(1000);
            $i--;
            continue;
        }
        $bytes += strlen($data);
//        echo "#$i\tpush ".strlen($data)." bytes\n";
    }
    echo "total push bytes: $bytes\n";
    var_dump($chan->stats());
}
else
{
    echo "Child\n";
    for ($i = 0; $i &lt; $n; $i++)
    {
        $data = $chan->pop();
        if ($data === false)
        {
            echo "channel empty\n";
            usleep(1000);
            $i--;
            continue;
        }
        $bytes += strlen($data);
//        echo "#$i\tpop " . strlen($data) . " bytes\n";
    }
    echo "total pop bytes: $bytes\n";
    var_dump($chan->stats());
}
</pre>

			</article>

		</div>
	</body>
</html>
