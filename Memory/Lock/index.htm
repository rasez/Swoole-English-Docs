<html>
	<head>
		<title>Lock</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css"/>
		<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
		<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
		<script type="text/javascript">
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		</script>
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>Lock</h1>

				<p>
					swoole1.6.4版本增加了锁的实现。PHP代码中可以很方便地创建一个锁，用来实现数据同步。swoole_lock类支持5种锁的类型：
				</p>
				<ol>
					<li>文件锁 SWOOlE_FILELOCK</li>
					<li>读写锁 SWOOLE_RWLOCK</li>
					<li>信号量 SWOOLE_SEM</li>
					<li>互斥锁 SWOOLE_MUTEX</li>
					<li>自旋锁 SWOOlE_SPINLOCK</li>
				</ol>
				<p>
					<strong>注意：请勿在<code>onReceive</code>等回调函数中创建锁，否则底层的GlobalMemory内存不足会创建失败。在swoole中可以创建的Lock对象数量有限</strong>
				</p>
				<h2>示例：</h2>
				<pre class="brush: php;">$lock = new swoole_lock(SWOOLE_MUTEX);
echo "[Master]create lock\n";
$lock>lock();
if(pcntl_fork() > 0) 
{
        sleep(1);
        $lock>unlock();
} 
else
{
        echo "[Child] Wait Lock\n";
        $lock>lock();
        echo "[Child] Get Lock\n";
        $lock>unlock();
        exit("[Child] exit\n");
}
echo "[Master]release lock\n";
unset($lock);
sleep(1);
echo "[Master]exit\n";
</pre>
			</article>

		</div>
	</body>
</html>
