<html>
	<head>
		<title>swoole_table::__construct</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css"/>
		<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
		<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
		<script type="text/javascript">
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		</script>
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>swoole_table->__construct</h1>

				<p>
					创建内存表。
				</p>
				<pre class="brush: php;">swoole_table->__construct(int $size)</pre>
				<ul>
					<li>创建对象后会创建一个Mutex锁</li>
					<li>$table->lock() / $table->unlock()在创建后即可使用</li>
					<li>$size参数指定表格的最大行数，必须为2的指数，如1024,8192,65536等</li>
					<li>table占用的内存总数为 (行尺寸$size) * (1.2预留20%作为hash冲突) * (列尺寸)，如果机器内存不足table会创建失败</li>
					<li>set操作能存储的最大行数与$size无关，如$size为1024实际可存储的行数小于1024</li>
				</ul>
				<blockquote>
					<p>
						swoole_table基于行锁，所以单次set/get/del在多线程/多进程的环境下是安全的
						<br />
						set/get/del是原子操作，用户代码中不需要担心数据加锁和同步的问题
					</p>
				</blockquote>
			</article>

		</div>
	</body>
</html>
