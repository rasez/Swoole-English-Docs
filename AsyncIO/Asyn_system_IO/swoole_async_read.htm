<html>
<head>
<title>swoole_async_read</title>
<meta http-equiv=Content-Type content="text/html; charset=gbk">
<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css"/>
<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
<script type="text/javascript">
    SyntaxHighlighter.defaults['gutter'] = false;
    SyntaxHighlighter.defaults['toolbar'] = false;
    SyntaxHighlighter.all();
</script>
</head>
<body>
    <div class="wiki_content">
        <article>
            <h1>swoole_async_read</h1>
            
            <p>异步读文件，使用此函数读取文件是非阻塞的，当读操作完成时会自动回调指定的函数。</p>
            <pre class="brush: php;">bool swoole_async_read(string $filename, mixed $callback, int $size = 8192, int $offset = 0);
</pre>
            <p>此函数与swoole_async_readfile不同，它是分段读取，可以用于读取超大文件。每次只读$trunk_size个字节，不会占用太多内存。</p>
            <p>在读完后会自动回调$callback函数，回调函数接受4个参数：</p>
            <ul>
                <li>$filename，文件名称</li>
                <li>$content，读取到的分段内容，如果内容为空，表明文件已读完</li>
                <li>$size，读取数据的最大长度，默认为8K</li>
                <li>$offset，偏移文件指针，默认为0，表示从文件头部开始读取。必须大于等于0且小于文件总长度</li>
            </ul>
            <blockquote>
                <p>$offset参数在1.7.13以上版本可用</p>
            </blockquote>
            <p>$callback函数，可以通过return true/false，来控制是否继续读下一段内容。</p>
            <ul>
                <li>return true，继续读取</li>
                <li>return false，停止读取并关闭文件</li>
            </ul>
        </article>
        
    </div>
</body>
</html>
