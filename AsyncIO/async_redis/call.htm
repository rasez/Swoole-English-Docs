<html>
<head>
<title>swoole_redis::__call</title>
<meta http-equiv=Content-Type content="text/html; charset=gbk">
<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css"/>
<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
<script type="text/javascript">
    SyntaxHighlighter.defaults['gutter'] = false;
    SyntaxHighlighter.defaults['toolbar'] = false;
    SyntaxHighlighter.all();
</script>
</head>
<body>
    <div class="wiki_content">
        <article>
            <h1>swoole_redis->__call</h1>
            
            <p>魔术方法，方法名会映射为Redis指令，参数作为Redis指令的参数。</p>
            <h2>函数原型</h2>
            <pre class="brush: php;">function swoole_redis-&gt;__call(string $command, array $params);</pre>
            <ul>
                <li>$command，必须为合法的Redis指令，详细参见<a href="http://redis.io/commands">Redis指令列表</a></li>
                <li>$params的最后一个参数必须为可执行的函数，其他参数必须为字符串</li>
            </ul>
            <h2>订阅/发布消息</h2>
            
            <p>Redis服务器除了作为内存存储之外，还可以作为一个消息通道服务器。SwooleRedis客户端也支持了Redis的订阅/发布消息指令。</p>
            <p>与普通的存储指令不同，消息订阅/发布指令不是请求响应式的。</p>
            <ul>
                <li>订阅/发布指令没有回调函数，不需要在最后一个参数传入callback</li>
                <li>使用订阅/发布消息命名，必须设置<code>onMessage</code>事件回调函数
                </li>
                <li>客户端发出了<code>subscribe</code>命令后，只能执行<code>subscribe</code>，
                    <code>subscribe</code>，<code>unsubscribe</code>，<code>punsubscribe</code>这4条命令
                </li>
            </ul>
            <pre class="brush: php;">$client = new swoole_redis;
$client-&gt;on('message', function (swoole_redis $client, $result) {
    var_dump($result);
    static $more = false;
    if (!$more and $result[0] == 'message')
    {
        echo "subscribe new channel\n";
        $client-&gt;subscribe('msg_1', 'msg_2');
        $client-&gt;unsubscribe('msg_0');
        $more = true;
    }
});
$client-&gt;connect('127.0.0.1', 6379, function (swoole_redis $client, $result) {
    echo "connect\n";
    $client-&gt;subscribe('msg_0');
});
            </pre>
            <h2>回调函数</h2>
            
            <pre>function onReceive(swoole_redis $redis, bool $result);</pre>
            <ul>
                <li>$redis: redis连接对象</li>
                <li>执行失败，$result为false, 可以读取<code>$redis-&gt;errCode</code>获得错误码，读取<code>$redis-&gt;errMsg</code>获得错误消息
                </li>
                <li>执行成功，返回数据结果，可能是字符串、数组或true</li>
            </ul>
            <h2>使用示例</h2>
            
            <pre class="brush: php;">$client-&gt;get('key', function (swoole_redis $client, $result) {
    var_dump($result);
});
            </pre>
        </article>
        
    </div>
</body>
</html>
