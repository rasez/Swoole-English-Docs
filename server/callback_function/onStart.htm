<html>
	<head>
		<title>onStart</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<meta name="GENERATOR" content="Macrobject Word-2-CHM">
		<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css"/>
		<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
		<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
		<script type="text/javascript">
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		</script>
	</head>

	<body>
		<div class="wiki_content">
			<article>
				<h1>onStart</h1>
				<p>
					Server启动在主进程的主线程回调此函数，函数原型
				</p>
				<pre class="brush: php;">function onStart(swoole_server $server);</pre>				
				<p>
					在此事件之前Swoole Server已进行了如下操作
				</p>
				<ul>
					<li>已创建了manager进程</li>
					<li>已创建了worker子进程</li>
					<li>已监听所有TCP/UDP端口</li>
					<li>已监听了定时器</li>
				</ul>
				<p>
					接下来要执行
				</p>
				<ul>
					<li>主Reactor开始接收事件，客户端可以connect到Server</li>
				</ul>
				<p>
					例子：
				</p>
				<pre class="brush: php;">
            $serv->on('start', function($serv) { 
                echo 'start',PHP_EOL; 
            }); 
            </pre>				
				<p>
					<strong>onStart回调中，仅允许echo、打印Log、修改进程名称。不得执行其他操作。onWorkerStart和onStart回调是在不同进程中并行执行的，不存在先后顺序。</strong>
				</p>
				<p>
					可以在onStart回调中，将$serv->master_pid和$serv->manager_pid的值保存到一个文件中。这样可以编写脚本，向这两个PID发送信号来实现关闭和重启的操作。
				</p>
				<p>
					从1.7.5+
					Master进程内不再支持定时器，onMasterConnect/onMasterClose2个事件回调也彻底移除。Master进程内不再保留任何PHP的接口。
				</p>
				<p>
					onStart事件在Master进程的主线程中被调用。
				</p>
				<blockquote>
					<p>
						在onStart中创建的<strong>全局资源对象</strong>不能在worker进程中被使用，因为发生onStart调用时，worker进程已经创建好了。
						<br />
						新创建的对象在主进程内，worker进程无法访问到此内存区域。
						<br />
						因此全局对象创建的代码需要放置在swoole_server_start之前。
					</p>
				</blockquote>
			</article>
		</div>
	</body>
</html>
