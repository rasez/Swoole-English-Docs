<html>
	<head>
		<title>server - 事件回调函数</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>事件回调函数</h1>
				<p>
					swoole_server是事件驱动模式，所有的业务逻辑代码必须写在事件回调函数中。当特定的网络事件发生后，swoole底层会主动回调指定的PHP函数。
				</p>
				<ul>
					<li>在swoole中共支持13种事件，具体详情请参考各个页面详细页。</li>
					<li>PHP语言有<a href="../../server/FAQs/6.htm">4种回调函数的写法</a></li>
				</ul>
				<h2>事件执行顺序</h2>
				<ul>
					<li>所有事件回调均在$server->start后发生</li>
					<li>服务器关闭程序终止时最后一次事件是onShutdown</li>
					<li>服务器启动成功后，onStart/onManagerStart/onWorkerStart会在不同的进程内并发执行。</li>
					<li>onReceive/onConnect/onClose/onTimer在worker进程(包括task进程)中各自触发</li>
					<li>worker/task进程启动/结束时会分别调用onWorkerStart/onWorkerStop</li>
					<li>onTask事件仅在task进程中发生</li>
					<li>onFinish事件仅在worker进程中发生</li>
				</ul>
				<blockquote>
					<p>
						onStart/onManagerStart/onWorkerStart
						3个事件的执行顺序是不确定的
					</p>
				</blockquote>
				<h2>异常捕获</h2>
				<ul>
					<li>swoole不支持 set_exception_handler函数</li>
					<li>必须在事件回调函数顶层进行try/catch来捕获异常</li>
				</ul>
				<pre>$serv->on('Timer', function() {
    try
    {
        //some code
    }
    catch(Exception $e)
    {
        //exception code
    }
}</pre>
			</article>
		</div>
	</body>
</html>
