<html>
<head>
<title>是否可以共用1个redis或mysql连接</title>
<meta http-equiv=Content-Type content="text/html; charset=gbk">
<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
</head>
<body>
    <div class="wiki_content">
        <article>
            <h1>是否可以共用1个redis或mysql连接</h1>
            
            <p>绝对不可以。必须每个进程单独创建redis/mysql连接，其他的存储客户端同样也是如此。原因是如果共用1个连接，
那么返回的结果无法保证被哪个进程处理。持有连接的进程理论上都可以对这个连接进行读写，这样数据就发生错乱了。</p>
            <p>
                <strong>所以在多个进程之间，一定不能共用连接</strong>
            </p>
            <ul>
                <li>在swoole_server中，应当在onWorkerStart中创建连接对象</li>
                <li>在swoole_process中，应当在swoole_process->start后，子进程回调函数中创建连接对象
                </li>
                <li>本页面所述信息对使用pcntl_fork的程序同样有效</li>
            </ul>
            <h2>示例</h2>
<pre>$serv = new swoole_server("0.0.0.0", 9502);
//必须在onWorkerStart回调中创建redis/mysql连接
$serv-&gt;on('workerstart', function($serv, $id) {
    $redis = new redis;
    $redis-&gt;connect('127.0.0.1', 6379);
    $serv-&gt;redis = $redis;
});

$serv-&gt;on('receive', function (swoole_server $serv, $fd, $from_id, $data) { 
    $value = $serv-&gt;redis-&gt;get("key");
    $serv-&gt;send($fd, "Swoole: ".$value);
});

$serv-&gt;start();
</pre>
        </article>
        
    </div>
</body>
</html>
