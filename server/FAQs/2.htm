<html>
<head>
<title>如何在回调函数中访问外部的变量</title>
<meta http-equiv=Content-Type content="text/html; charset=gbk">
<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css" />
<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
<script type="text/javascript">
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
</head>
<body>
    <div class="wiki_content">
        <article>
            <h1>如何在回调函数中访问外部的变量</h1>
            
            <p>在swoole_server/swoole_client的事件回调函数中，需要读取调用外部的变量和对象，可以通过下面的几种方法实现。</p>
            <h2>一、事件回调函数改用对象+属性</h2>
            <pre class="brush: php;">class Server
{
    public $buffer;
    public $serv;

    function onReceive($serv, $fd, $from_id, $data)
    {
        //在这里可以读取到EventCallback对象上的属性和方法
        $this->buffer[$fd] = $data;
        $this->hello();
    }

    function hello()
    {
    }

    function run()
    {
        $serv = new swoole_server('127.0.0.1', 9501);
        $this->serv  = $serv;
        $serv->on('receive', array($this, 'onReceive'));
        $serv->start();
    }
}
$server= new Server;
$server->run();
</pre>
            <h2>二、使用全局变量</h2>
            <pre class="brush: php;">$buffer = array();
$serv->on('receive', function($serv, $fd, $from_id, $data) {
    global $buffer;
    $buffer[$fd] = $data;
});
</pre>
            <h2>三、使用类静态变量</h2>
            <pre class="brush: php;">class Test
{
    static $buffer;
}

$serv->on('receive', function($serv, $fd, $from_id, $data) {
    Test::$buffer[$fd] = $data;
});
</pre>
            <h2>四、匿名函数中使用use语法</h2>
            <pre class="brush: php;">$buffer = array();
$serv->on('receive', function($serv, $fd, $from_id, $data) use ($buffer) {
    $buffer[$fd] = $data;
});
</pre>
            <blockquote>
                <p>
                    需要PHP5.4或更高的版本<br /> 多个参数可以用逗号隔开，如use ($buffer,
                    $users, $config)
                </p>
            </blockquote>
            <h2>五、直接保存在swoole_server/swoole_client对象上</h2>
            <pre class="brush: php;">$serv->buffer = array();
$serv->on('receive', function($serv, $fd, $from_id, $data) use ($buffer) {
    $serv->buffer[$fd] = $data;
});
</pre>
        </article>
        
    </div>
</body>
</html>
