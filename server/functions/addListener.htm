<html>
	<head>
		<title>swoole_server::addListener</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css" />
		<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
		<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
		<script type="text/javascript">
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		</script>
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>swoole_server->addListener</h1>
				<p>
					Swoole提供了swoole_server::addListener来增加监听的端口。业务代码中可以通过调用swoole_server::connection_info来获取某个连接来自于哪个端口。
				</p>
				<p>
					函数原型：
				</p>
				<pre class="brush: php;">void swoole_server->addListener(string $host, int $port, $type = SWOOLE_SOCK_TCP);
</pre>
				<h2>swoole支持的Socket类型</h2>
				<ul>
					<li><strong>SWOOLE_TCP</strong>/<strong>SWOOLE_SOCK_TCP</strong> tcp ipv4 socket</li>
					<li><strong>SWOOLE_TCP6</strong>/<strong>SWOOLE_SOCK_TCP6</strong> tcp ipv6 socket</li>
					<li><strong>SWOOLE_UDP</strong>/<strong>SWOOLE_SOCK_UDP</strong> udp ipv4 socket</li>
					<li><strong>SWOOLE_UDP6</strong>/<strong>SWOOLE_SOCK_UDP6</strong> udp ipv6 socket</li>
					<li><strong>SWOOLE_UNIX_DGRAM</strong> unix socket
						dgram</li>
					<li><strong>SWOOLE_UNIX_STREAM</strong> unix socket
						stream</li>
				</ul>
				<blockquote>
					<p>
						Unix
						Socket仅在1.7.1+后可用，此模式下$host参数必须填写可访问的文件路径，$port参数忽略
						<br />
						Unix Socket模式下，客户端$fd将不再是数字，而是一个文件路径的字符串
						<br />
						SWOOLE_TCP等是1.7.0+后提供的简写方式，与1.7.0前的SWOOLE_SOCK_TCP是等同的
					</p>
				</blockquote>
				<p>
					您可以混合使用UDP/TCP，同时监听内网和外网端口。 示例：
				</p>
				<pre class="brush: php;">$serv->addlistener("127.0.0.1", 9502, SWOOLE_SOCK_TCP);
$serv->addlistener("192.168.1.100", 9503, SWOOLE_SOCK_TCP);
$serv->addlistener("0.0.0.0", 9504, SWOOLE_SOCK_UDP);
$serv->addlistener("/var/run/myserv.sock", 0, SWOOLE_UNIX_STREAM);
</pre>
				<h2>IPv4与IPv6</h2>
				<ul>
					<li>IPv4使用 127.0.0.1表示监听本机，0.0.0.0表示监听所有地址</li>
					<li>IPv6使用::1表示监听本机，:: (0:0:0:0:0:0:0:0) 表示监听所有地址</li>
				</ul>
			</article>
		</div>
	</body>
</html>
