<html>
	<head>
		<title>swoole_server::finish</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css" />
		<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
		<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
		<script type="text/javascript">
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		</script>
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>swoole_server->finish</h1>
				<p>
					此函数用于在task进程中通知worker进程，投递的任务已完成。此函数可以传递结果数据给worker进程。
				</p>
				<pre class="brush: php;">$serv->finish("response");</pre>
				<p>
					<strong>使用swoole_server::finish函数必须为Server设置onFinish回调函数。此函数只可用于task进程的onTask回调中</strong>
				</p>
				<ul>
					<li>finish方法可以连续多次调用，Worker进程会多次触发<code>onFinish</code>事件</li>
					<li>在<code>onTask</code>回调函数中调用过<code>finish</code>方法后，return数据依然会触发<code>onFinish</code>事件</li>
				</ul>
				<blockquote>
					<p>
						swoole_server::finish是可选的。如果worker进程不关心任务执行的结果，不需要调用此函数
						<br />
						在onTask回调函数中return字符串，等同于调用finish
					</p>
				</blockquote>
			</article>
		</div>
	</body>
</html>
