<html>
	<head>
		<title>swoole_server::__construct</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css" />
		<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
		<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
		<script type="text/javascript">
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		</script>
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>swoole_server::__construct</h1>
				<p>
					创建一个swoole server资源对象。
				</p>
				<pre class="brush: php;">
            $serv = new swoole_server(string $host, int $port, int $mode = SWOOLE_PROCESS, int $sock_type = SWOOLE_SOCK_TCP);
            </pre>
				<br>
				<pre class="brush: php;">
            $serv = swoole_server_create(string $host, int $port, int $mode = SWOOLE_PROCESS, int $sock_type = SWOOLE_SOCK_TCP);
            </pre>
				<ul>
					<li>$host参数用来指定监听的ip地址，如127.0.0.1，或者外网地址，或者0.0.0.0监听全部地址
						<ul>
							<li>IPv4使用 127.0.0.1表示监听本机，0.0.0.0表示监听所有地址</li>
							<li>IPv6使用::1表示监听本机，:: (0:0:0:0:0:0:0:0)
								表示监听所有地址</li>
						</ul></li>
					<li>$port监听的端口，如9501，监听小于1024端口需要root权限，如果此端口被占用server->start时会失败</li>
					<li>$mode运行的模式，swoole提供了3种运行模式，默认为多进程模式</li>
					<li>$sock_type指定socket的类型，支持TCP/UDP、TCP6/UDP6、UnixSock Stream/Dgram 6种</li>
					<li>使用$sock_type | SWOOLE_SSL可以启用SSL加密。启用SSL后必须配置<a href="../../server/config_options/ssl_cert_file.htm">ssl_key_file和ssl_cert_file</a></li>
					<li>1.7.11后增加了对Unix Socket的支持，详细请参见 <a href="addListener.htm">swoole支持的Socket类型</a></li>
					<li>构造函数中的参数与swoole_server::addlistener中是完全相同的</li>
					<li><strong>高负载的服务器，请务必调整<a href="../../rumen/neihe_canshu.htm">Linux内核参数</a></strong></li>
					<li><a href="../../server/advanced_feature/9.htm"> 3种Server运行模式介绍</a></li>
				</ul>
				<blockquote>
					<p>
						Swoole1.6版本之后PHP版本去掉了线程模式，原因是php的内存管理器在多线程下容易发生错误
						<br />
						线程模式仅供C++中使用
						<br />
						BASE模式在1.6.4版本之后也可是使用多进程，设置worker_num来启用
					</p>
				</blockquote>
			</article>
		</div>
	</body>
</html>
