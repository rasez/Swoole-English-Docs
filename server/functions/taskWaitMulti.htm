<html>
	<head>
		<title>swoole_server::taskWaitMulti</title>
		<meta http-equiv=Content-Type content="text/html; charset=gbk">
		<link rel="stylesheet" href="../../public/css/Word2Chm.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/default.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/noframe.css" type="text/css" />
		<link rel="stylesheet" href="../../public/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="../../public/styles/shThemeDefault.css" type="text/css" />
		<script type="text/javascript" src="../../public/scripts/shCore.js"></script>
		<script type="text/javascript" src="../../public/scripts/shBrushPhp.js"></script>
		<script type="text/javascript">
			SyntaxHighlighter.defaults['gutter'] = false;
			SyntaxHighlighter.defaults['toolbar'] = false;
			SyntaxHighlighter.all();
		</script>
	</head>
	<body>
		<div class="wiki_content">
			<article>
				<h1>swoole_server->taskWaitMulti</h1>
                        <p>并发执行多个Task</p>

<pre class="brush:php;">array swoole_server->taskWaitMulti(array $tasks, double $timeout);
</pre>

<ul>
<li>$tasks 必须为数组，底层会遍历$tasks将任务逐个投递到Task进程</li>
<li>$timeout 为浮点型，单位为秒</li>
<li>执行成功返回一个结果数据，顺序与传入的$tasks一致</li>
<li>失败返回false</li>
</ul>

<h2>使用实例</h2>

<pre class="brush:php;">$tasks[] = mt_rand(1000, 9999);
$tasks[] = mt_rand(1000, 9999);
//等待所有Task结果返回，超时为10s
var_dump($tasks);
$results = $serv->taskWaitMulti($tasks, 10.0);
var_dump($results);
</pre>

<blockquote>
  <p>taskWaitMulti接口在1.8.8或更高版本可用</p>
</blockquote>
			</article>
		</div>
	</body>
</html>
